{"ast":null,"code":"import * as i0 from \"@angular/core\";\nlet messageId = 0;\nexport let StatsService = /*#__PURE__*/(() => {\n  class StatsService {\n    constructor() {\n      this.cache = new Map();\n      this.pending = new Map();\n      this.resolves = new Map();\n      this.worker = new Worker('./stats.worker', {\n        type: 'module'\n      });\n      this.worker.addEventListener('message', ev => {\n        const {\n          data\n        } = ev;\n        const {\n          id,\n          result\n        } = data;\n\n        if (this.resolves.has(id)) {\n          this.resolves.get(id)(result);\n        }\n\n        this.resolves.delete(id);\n      });\n    }\n\n    calculate(data) {\n      if (this.cache.has(data)) {\n        return this.cache.get(data);\n      }\n\n      if (this.pending.has(data)) {\n        return this.pending.get(data);\n      }\n\n      messageId++;\n      this.worker.postMessage({\n        id: messageId,\n        arr: data\n      });\n      const pending = new Promise(resolve => {\n        this.resolves.set(messageId, resolve);\n      }).then(result => {\n        this.pending.delete(data);\n        this.cache.set(data, result);\n        return result;\n      });\n      this.pending.set(data, pending);\n      return pending;\n    }\n\n  }\n\n  StatsService.ɵfac = function StatsService_Factory(t) {\n    return new (t || StatsService)();\n  };\n\n  StatsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StatsService,\n    factory: StatsService.ɵfac,\n    providedIn: 'root'\n  });\n  return StatsService;\n})();","map":null,"metadata":{},"sourceType":"module"}